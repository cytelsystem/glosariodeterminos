//*********************************************************************//
//**Nota: Crear la base de datos y las colleciones previamente en mongo

//*********************************************************************//


//****************paqueteria/configuration/MapperConfig.java**********************//
package com.dh.paqueteria.configuration;

import org.modelmapper.ModelMapper;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;


@Configuration
public class MapperConfig {

    @Bean
    public ModelMapper getModelMapper(){

        return new ModelMapper();
    }
}
//*******paqueteria/persistence/repository/PaqueteRepository.java*********************//

package com.dh.paqueteria.persistence.repository;

import com.dh.paqueteria.persistence.entity.Paquete;
import org.springframework.data.mongodb.repository.MongoRepository;
import org.springframework.stereotype.Repository;

@Repository
public interface PaqueteRepository extends MongoRepository<Paquete, Long> {

}
//*******paqueteria/persistence/entity/Paquete.java******************************************//

package com.dh.paqueteria.persistence.entity;


import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

@Document(collection = "Paquetes")
public class Paquete {

    @Id
    private Long id;
    private String codigo;
    private String nombreProducto;
    private String estado;

    private String destinoCalle;
    private Long destinoNumero;
    private String destinolocalidad;
    private String destinoProvincia;


    public Paquete() {
    }

    public Paquete(String codigo, String nombreProducto, String estado, String destinoCalle, Long destinoNumero, String destinolocalidad, String destinoProvincia) {
        this.codigo = codigo;
        this.nombreProducto = nombreProducto;
        this.estado = estado;
        this.destinoCalle = destinoCalle;
        this.destinoNumero = destinoNumero;
        this.destinolocalidad = destinolocalidad;
        this.destinoProvincia = destinoProvincia;
    }


    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getCodigo() {
        return codigo;
    }

    public void setCodigo(String codigo) {
        this.codigo = codigo;
    }

    public String getNombreProducto() {
        return nombreProducto;
    }

    public void setNombreProducto(String nombreProducto) {
        this.nombreProducto = nombreProducto;
    }

    public String getEstado() {
        return estado;
    }

    public void setEstado(String estado) {
        this.estado = estado;
    }

    public String getDestinoCalle() {
        return destinoCalle;
    }

    public void setDestinoCalle(String destinoCalle) {
        this.destinoCalle = destinoCalle;
    }

    public Long getDestinoNumero() {
        return destinoNumero;
    }

    public void setDestinoNumero(Long destinoNumero) {
        this.destinoNumero = destinoNumero;
    }

    public String getDestinolocalidad() {
        return destinolocalidad;
    }

    public void setDestinolocalidad(String destinolocalidad) {
        this.destinolocalidad = destinolocalidad;
    }

    public String getDestinoProvincia() {
        return destinoProvincia;
    }

    public void setDestinoProvincia(String destinoProvincia) {
        this.destinoProvincia = destinoProvincia;
    }

}
//**********************paqueteria/service/PaqueteService.java************************************//

package com.dh.paqueteria.service;

import com.dh.paqueteria.model.PaqueteDTO;
import com.dh.paqueteria.persistence.entity.Paquete;
import com.dh.paqueteria.persistence.repository.PaqueteRepository;
import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

@Service
public class PaqueteService {

    @Autowired
    private PaqueteRepository repository;

    @Autowired
    private ModelMapper modelMapper;

    public String guardar(Paquete p){
        String respuesta = null;
        if (repository.save(p) != null){
            respuesta = "ok";
        }
        return respuesta;
    }

    public void eliminar(Long id){
        repository.deleteById(id);
    }

    public Optional<Paquete> buscarPorId(Long id){

        return repository.findById(id);
    }

    public List<PaqueteDTO> buscarTodos(){

        List<PaqueteDTO> paquetes = new ArrayList<>();

        for(Paquete paquete: repository.findAll()){
            paquetes.add(modelMapper.map(paquete, PaqueteDTO.class));
        }

        return paquetes;
    }

    public List<PaqueteDTO> buscarPorEnCamino(){

        List<PaqueteDTO> paquetes = new ArrayList<>();

        for(Paquete paquete: repository.findAll()){
            if(paquete.getEstado().equals("camino")){
            paquetes.add(modelMapper.map(paquete, PaqueteDTO.class));
            }
        }

        return paquetes;
    }

}

//**********************paqueteria/model/PaqueteDTO.java*************************************//

package com.dh.paqueteria.model;

public class PaqueteDTO {

    private Long id;
    private String codigo;
    private String nombreProducto;
    private String estado;

    private String destinoCalle;
    private Long destinoNumero;
    private String destinolocalidad;
    private String destinoProvincia;

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getCodigo() {
        return codigo;
    }

    public void setCodigo(String codigo) {
        this.codigo = codigo;
    }

    public String getNombreProducto() {
        return nombreProducto;
    }

    public void setNombreProducto(String nombreProducto) {
        this.nombreProducto = nombreProducto;
    }

    public String getEstado() {
        return estado;
    }

    public void setEstado(String estado) {
        this.estado = estado;
    }

    public String getDestinoCalle() {
        return destinoCalle;
    }

    public void setDestinoCalle(String destinoCalle) {
        this.destinoCalle = destinoCalle;
    }

    public Long getDestinoNumero() {
        return destinoNumero;
    }

    public void setDestinoNumero(Long destinoNumero) {
        this.destinoNumero = destinoNumero;
    }

    public String getDestinolocalidad() {
        return destinolocalidad;
    }

    public void setDestinolocalidad(String destinolocalidad) {
        this.destinolocalidad = destinolocalidad;
    }

    public String getDestinoProvincia() {
        return destinoProvincia;
    }

    public void setDestinoProvincia(String destinoProvincia) {
        this.destinoProvincia = destinoProvincia;
    }

}

//*******************paqueteria/controller/PaqueteriaController.java*****************//

package com.dh.paqueteria.controller;

import com.dh.paqueteria.model.PaqueteDTO;
import com.dh.paqueteria.persistence.entity.Paquete;
import com.dh.paqueteria.service.PaqueteService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Optional;


@RestController
@RequestMapping("/paquetes")
public class PaqueteriaController {

        @Autowired
        PaqueteService service;

        @PostMapping("/Crear")
        public ResponseEntity<String> crear(@RequestBody Paquete o){
            ResponseEntity<String> respuesta = null;

            if(service.guardar(o) != null){
                respuesta = ResponseEntity.ok("El Registro fue creado con Exito");
            }else{
                respuesta = ResponseEntity.internalServerError().body("Ooops");
            }

            return respuesta;
        }

        @DeleteMapping("/eliminar/{id}")
        public ResponseEntity<String> eliminar(@PathVariable Long id) {

            HttpHeaders responseHeaders = new HttpHeaders();

            ResponseEntity<String> response = null;

            if (service.buscarPorId(id) != null) {

                service.eliminar(id);
                response = new ResponseEntity<String>("Registro Eliminado ID"+ " " + id, responseHeaders, HttpStatus.OK);
            } else {
                response = ResponseEntity.status(HttpStatus.NOT_FOUND).build();
            }

            return response;

        }

        @PutMapping("/actualizar")
        public ResponseEntity<String> actualizar(@RequestBody Paquete o){
            ResponseEntity<String> respuesta = null;

            if(service.guardar(o) != null){
                respuesta = ResponseEntity.ok("El Registro fue actualizado con Exito");
            }else{
                respuesta = ResponseEntity.internalServerError().body("Ooops");
            }

            return respuesta;
        }


        @GetMapping("/buscarPorId/{id}")
        public Optional<Paquete> buscarPorId(@PathVariable Long id){

            return service.buscarPorId(id);
        }

        @GetMapping("/ConsultarTodos")
        public ResponseEntity<List<PaqueteDTO>> consultarTodos(){

            return ResponseEntity.ok(service.buscarTodos());
        }

        @GetMapping("/buscarPorEnCamino")
        public ResponseEntity<List<PaqueteDTO>> buscarPorEnCamino(){

            return ResponseEntity.ok(service.buscarPorEnCamino());
        }

    }

//*********************************************************************//
